package components

import "mealplanner/internal/models"
import "fmt"

templ SearchBar() {
	<div class="flex flex-col sm:flex-row gap-4 items-start sm:items-center justify-between mb-8">
		<div class="flex-1 w-full sm:w-auto">
			<input
				type="text"
				name="search"
				placeholder="Search foods..."
				class="w-full px-4 py-2 rounded border border-gray-300 focus:border-blue-500 focus:ring-1 focus:ring-blue-500"
				hx-trigger="keyup changed delay:500ms"
				hx-get="/foods/search"
				hx-target="#food-list"
			/>
		</div>
		<div class="flex gap-2 w-full sm:w-auto">
			// <select
			//     name="type"
			//     class="px-4 py-2 rounded border border-gray-300"
			//     hx-get="/foods/filter"
			//     hx-target="#food-list"
			// >
			//     <option value="all">All Types</option>
			//     <option value="basic">Basic Foods</option>
			//     <option value="recipe">Recipes</option>
			// </select>
			<button
				class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700"
				@click={ fmt.Sprintf("$store.mealPlanner.showAddFoodModal()") }
			>
				Add Food
			</button>
		</div>
	</div>
}

templ FoodList(foods []*models.Food) {
	for _, food := range foods {
		<div
			class="p-4 hover:bg-gray-50 border-b border-gray-200 last:border-0"
			@click={ fmt.Sprintf("$store.mealPlanner.showViewFoodModal({id: %v})", food.ID) }
		>
			<div class="flex justify-between items-start">
				<div>
					<h3 class="font-medium">{ food.Name }</h3>
					<p class="text-sm text-gray-600">
						if food.IsRecipe {
							<span>Recipe</span>
						} else {
							<span>Basic Food</span>
						}
						<span>â€¢ { food.BaseUnit }</span>
					</p>
				</div>
				<div class="flex gap-2">
					<button
						class="p-2 hover:bg-gray-100 rounded"
						@click.stop={ fmt.Sprintf("$store.mealPlanner.showEditFoodModal({id:%d})", food.ID) }
					>
						<svg class="w-5 h-5" viewBox="0 0 20 20" fill="currentColor">
							<path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z"></path>
						</svg>
					</button>
					<button
						class="p-2 text-gray-400 hover:text-red-600 rounded"
						@click.stop={ fmt.Sprintf("confirmDeleteFood({id:%d, name:'%s'})", food.ID, food.Name) }
					>
						<svg class="w-5 h-5" viewBox="0 0 20 20" fill="currentColor">
							<path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd"></path>
						</svg>
					</button>
				</div>
			</div>
		</div>
	}
}

// templ FoodDetails(food *models.Food) {
